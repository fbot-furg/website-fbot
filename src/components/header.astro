---
import { Icon } from "astro-icon";
import type { NavItem, NavItemDropdown } from "~/types";
import HeaderItem from "./header-item.astro";
import HeaderDropdown from "./header-dropdown.astro";
import HeaderItemResponsive from "./header-item-responsive.astro";

type NavItemsType = NavItem | NavItemDropdown;

const navItems: Array<NavItemsType> = [
	{title: "About Us", url: "/#about-us"},
	// {title: "Teams", items: [
	// 	{title: "FBOT@Home", url: "butiabots"},
	// 	{title: "FSEK" , url: "fsek"},
	// 	{title: "Hydrone", url: "hydrone"},
	// 	{title: "VSS", url: "vss"},
	// ]},
	{title: "FBOT@Home", url: "butiabots"},
	{title: "Blog", url: "/#blog"},
	// {title: "Partners", url: "/#partners"},
	{title: "Contact", url: "/#footer"},
];

function isNavItemDropdown(item: NavItemsType): item is NavItemDropdown {
  return "items" in item;
}
---
<header id="page-header" class="fixed-header fixed top-0 bottom-auto z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 bg-default text-default">
	<a class="flex items-center gap-3 hover:!text-default" href="/">
		<h1 class="sr-only">FBOT</h1>
		<Icon name="logomark" class="h-10" />
		<Icon name="wordmark" class="hidden h-4 sm:block" />
	</a>
	<div>
		<div class="flex items-center gap-6">
			<nav class="hidden sm:block">
				<ul class="flex items-center gap-6">
					{navItems.map(item => 
						isNavItemDropdown(item)
							? <HeaderDropdown title={item.title} items={item.items} />
							: <HeaderItem title={item.title} url={item.url} />
					)}
				</ul>
			</nav>
			
			<button id="open-nav-button" type="button" class="btn sm:hidden" aria-label="Navigation">
				<Icon pack="mdi" name="menu" class="h-8" />
			</button>

			<!-- <ThemeSwitcher /> -->
		</div>

		<div id="menu-modal" class="modal hidden" aria-hidden="true">
			<div class="fixed inset-0 bg-default px-8 py-4 text-default">
				<div class="space-y-4" role="dialog" aria-modal="true">
					<header class="text-right">
						<button
							id="close-nav-button"
							type="button"
							class="btn"
							aria-label="Close navigation"
						>
							<Icon pack="mdi" name="close" class="h-8" />
						</button>
					</header>

					<div class="flex justify-center">
						<Icon name="logomark" class="h-16" />
					</div>
					<nav>
						<ul class="flex flex-col gap-8">
							{navItems.map(item => 
								isNavItemDropdown(item)
									? <HeaderDropdown title={item.title} items={item.items} />
									: <HeaderItemResponsive title={item.title} url={item.url} />
							)}
						</ul>
					</nav>
				</div>
			</div>
		</div>
		
	</div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";
  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
	document.querySelector(`#${menuModalId}`)?.classList.remove("hidden");
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
	document.querySelector(`#${menuModalId}`)?.classList.add("hidden");
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>
